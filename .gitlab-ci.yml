stages:
  - test
  - release

include:
  - template: Security/SAST.gitlab-ci.yml

test:
  stage: test
  image: golang:1.17-alpine
  before_script:
    - apk update && apk add --no-cache gcc g++ libstdc++ ca-certificates
    - update-ca-certificates
  variables:
    CGO_ENABLED: "1"
    GO111MODULE: "on"
  script:
    - go mod tidy
    - go run github.com/golangci/golangci-lint/cmd/golangci-lint run
    - go test ./... -coverprofile coverage.txt -covermode count
    - go run gotest.tools/gotestsum --junitfile report.xml --format testname
    - go run github.com/boumenot/gocover-cobertura < coverage.txt > cobertura.xml
  artifacts:
    when: always
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: cobertura.xml

sonar:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: sonar-scanner
  only:
    - main
    - merge_request

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - echo "running release_job for $TAG"
  release:
    tag_name: 'v0.$CI_PIPELINE_IID'
    description: 'v0.$CI_PIPELINE_IID'
    ref: $CI_COMMIT_SHA
